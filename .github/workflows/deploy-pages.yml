name: Deploy Benchmark Reports to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout results repository
        uses: actions/checkout@v4
        with:
          path: results-repo

      - name: Checkout benchmark repository
        uses: actions/checkout@v4
        with:
          repository: base/benchmark
          path: benchmark-repo
          ref: 5bcbf4e911232992f28cd7f0c731f25f8789fcb3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: benchmark-repo/report/package-lock.json

      - name: Install dependencies
        working-directory: benchmark-repo/report
        run: npm install

      - name: Build all result pages
        run: |
          set -e
          
          # Create the main output directory for all pages
          mkdir -p pages
          
          # Find all result directories (subdirectories in results/)
          for result_dir in results-repo/results/*/; do
            if [ -d "$result_dir" ]; then
              # Get the result name (e.g., "client-comparison")
              result_name=$(basename "$result_dir")
              
              echo "Processing $result_name..."
              
              # Clean the output directory in benchmark repo
              rm -rf benchmark-repo/output
              
              # Copy the result data to the benchmark repo's output folder
              cp -r "$result_dir" benchmark-repo/output
              
              # Build the report
              cd benchmark-repo/report
              npm run build
              cd ../..
              
              # Copy the built report to our pages directory under the result name
              mkdir -p "pages/$result_name"
              cp -r benchmark-repo/report/dist/* "pages/$result_name/"
              
              echo "Completed processing $result_name"
            fi
          done
          
          # Create an index page that lists all reports
          cat > pages/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Base Benchmark Reports</title>
            <style>
              body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
                max-width: 800px;
                margin: 0 auto;
                padding: 2rem;
                line-height: 1.6;
                color: #333;
              }
              h1 {
                border-bottom: 2px solid #0066cc;
                padding-bottom: 0.5rem;
              }
              .report-list {
                list-style: none;
                padding: 0;
              }
              .report-list li {
                margin: 1rem 0;
              }
              .report-list a {
                display: block;
                padding: 1rem;
                background: #f5f5f5;
                border-radius: 8px;
                text-decoration: none;
                color: #0066cc;
                transition: background 0.2s;
              }
              .report-list a:hover {
                background: #e0e0e0;
              }
              .report-name {
                font-size: 1.2rem;
                font-weight: 600;
              }
            </style>
          </head>
          <body>
            <h1>Base Benchmark Reports</h1>
            <p>Select a benchmark report to view:</p>
            <ul class="report-list">
          EOF
          
          # Add links for each report
          for result_dir in results-repo/results/*/; do
            if [ -d "$result_dir" ]; then
              result_name=$(basename "$result_dir")
              # Convert directory name to readable title
              result_title=$(echo "$result_name" | sed 's/-/ /g' | sed 's/\b\(.\)/\u\1/g')
              echo "    <li><a href=\"./$result_name/\"><span class=\"report-name\">$result_title</span></a></li>" >> pages/index.html
            fi
          done
          
          # Close the HTML
          cat >> pages/index.html << 'EOF'
            </ul>
          </body>
          </html>
          EOF
          
          echo "All reports built successfully!"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

